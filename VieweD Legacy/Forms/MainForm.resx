<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MM.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="rtInfo.Text" xml:space="preserve">
    <value>Click  File -&gt; Open  to start
The "data\&lt;engine&gt;\lookup" folder is used to create some custom value names
The "data\&lt;engine&gt;\filters" folder containts custom filters.
You can place extra rule files inside the "data\&lt;engine&gt;\rules" folder if the plugin supports them

When viewing a packet you can right-click the packet list for extra options.</value>
  </data>
  <metadata name="pmPacketList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>245, 17</value>
  </metadata>
  <metadata name="openLogFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>91, 17</value>
  </metadata>
  <metadata name="statusBar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>368, 17</value>
  </metadata>
  <metadata name="saveCSVFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>469, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>69</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>